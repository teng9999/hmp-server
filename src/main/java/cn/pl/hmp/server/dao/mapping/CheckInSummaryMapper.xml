<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.pl.hmp.server.dao.mapper.CheckInSummaryMapper" >
  <resultMap id="BaseResultMap" type="cn.pl.hmp.server.dao.entity.CheckInSummary" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sys_id" property="sysId" jdbcType="BIGINT" />
    <result column="org_id" property="orgId" jdbcType="BIGINT" />
    <result column="room_id" property="roomId" jdbcType="BIGINT" />
    <result column="hotel_id" property="hotelId" jdbcType="BIGINT" />
    <result column="last_room_status" property="lastRoomStatus" jdbcType="INTEGER" />
    <result column="plug_interval" property="plugInterval" jdbcType="INTEGER" />
    <result column="plug_in_time" property="plugInTime" jdbcType="TIMESTAMP" />
    <result column="plug_out_time" property="plugOutTime" jdbcType="TIMESTAMP" />
    <result column="check_in_time" property="checkInTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sys_id, org_id, room_id, hotel_id, last_room_status, plug_interval, plug_in_time, 
    plug_out_time, check_in_time, create_time, creator, modify_time, modifier
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.pl.hmp.server.dao.entity.CheckInSummaryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from hmp_check_in_summary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from hmp_check_in_summary
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from hmp_check_in_summary
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.pl.hmp.server.dao.entity.CheckInSummary" >
    insert into hmp_check_in_summary (id, sys_id, org_id, 
      room_id, hotel_id, last_room_status, 
      plug_interval, plug_in_time, plug_out_time, 
      check_in_time, create_time, creator, 
      modify_time, modifier)
    values (#{id,jdbcType=BIGINT}, #{sysId,jdbcType=BIGINT}, #{orgId,jdbcType=BIGINT}, 
      #{roomId,jdbcType=BIGINT}, #{hotelId,jdbcType=BIGINT}, #{lastRoomStatus,jdbcType=INTEGER}, 
      #{plugInterval,jdbcType=INTEGER}, #{plugInTime,jdbcType=TIMESTAMP}, #{plugOutTime,jdbcType=TIMESTAMP}, 
      #{checkInTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=BIGINT}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{modifier,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.pl.hmp.server.dao.entity.CheckInSummary" >
    insert into hmp_check_in_summary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sysId != null" >
        sys_id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="roomId != null" >
        room_id,
      </if>
      <if test="hotelId != null" >
        hotel_id,
      </if>
      <if test="lastRoomStatus != null" >
        last_room_status,
      </if>
      <if test="plugInterval != null" >
        plug_interval,
      </if>
      <if test="plugInTime != null" >
        plug_in_time,
      </if>
      <if test="plugOutTime != null" >
        plug_out_time,
      </if>
      <if test="checkInTime != null" >
        check_in_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sysId != null" >
        #{sysId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=BIGINT},
      </if>
      <if test="hotelId != null" >
        #{hotelId,jdbcType=BIGINT},
      </if>
      <if test="lastRoomStatus != null" >
        #{lastRoomStatus,jdbcType=INTEGER},
      </if>
      <if test="plugInterval != null" >
        #{plugInterval,jdbcType=INTEGER},
      </if>
      <if test="plugInTime != null" >
        #{plugInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plugOutTime != null" >
        #{plugOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkInTime != null" >
        #{checkInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.pl.hmp.server.dao.entity.CheckInSummary" >
    update hmp_check_in_summary
    <set >
      <if test="sysId != null" >
        sys_id = #{sysId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="roomId != null" >
        room_id = #{roomId,jdbcType=BIGINT},
      </if>
      <if test="hotelId != null" >
        hotel_id = #{hotelId,jdbcType=BIGINT},
      </if>
      <if test="lastRoomStatus != null" >
        last_room_status = #{lastRoomStatus,jdbcType=INTEGER},
      </if>
      <if test="plugInterval != null" >
        plug_interval = #{plugInterval,jdbcType=INTEGER},
      </if>
      <if test="plugInTime != null" >
        plug_in_time = #{plugInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plugOutTime != null" >
        plug_out_time = #{plugOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkInTime != null" >
        check_in_time = #{checkInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.pl.hmp.server.dao.entity.CheckInSummary" >
    update hmp_check_in_summary
    set sys_id = #{sysId,jdbcType=BIGINT},
      org_id = #{orgId,jdbcType=BIGINT},
      room_id = #{roomId,jdbcType=BIGINT},
      hotel_id = #{hotelId,jdbcType=BIGINT},
      last_room_status = #{lastRoomStatus,jdbcType=INTEGER},
      plug_interval = #{plugInterval,jdbcType=INTEGER},
      plug_in_time = #{plugInTime,jdbcType=TIMESTAMP},
      plug_out_time = #{plugOutTime,jdbcType=TIMESTAMP},
      check_in_time = #{checkInTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 自定义 -->
  <!-- 批量添加 -->
  <insert id="insertOnBatch" parameterType="java.util.List">
    <![CDATA[
    insert into hmp_check_in_summary(
      sys_id, org_id, 
      room_id, hotel_id, last_room_status, 
      plug_interval, plug_in_time, 
      plug_out_time, check_in_time, create_time, 
      creator, modify_time, modifier) 
      values 
    ]]>
    <foreach collection ="list" item ="item" index ="index" separator =","> 
       (#{item.sysId},#{item.orgId},#{item.roomId},#{item.hotelId},
       #{item.lastRoomStatus},#{item.plugInterval}
       ,#{item.plugInTime},#{item.plugOutTime}
       ,#{item.checkInTime},#{item.createTime}
       ,#{item.creator},#{item.modifyTime},#{item.modifier}) 
    </foreach> 
  </insert>
  <resultMap id="TotalResultMap" type="cn.pl.hmp.server.dao.entity.CheckInSummary" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sys_id" property="sysId" jdbcType="BIGINT" />
    <result column="org_id" property="orgId" jdbcType="BIGINT" />
    <result column="room_id" property="roomId" jdbcType="BIGINT" />
    <result column="hotel_id" property="hotelId" jdbcType="BIGINT" />
    <result column="last_room_status" property="lastRoomStatus" jdbcType="INTEGER" />
    <result column="plug_number" property="plugNumber" jdbcType="INTEGER" />
    <result column="plug_interval" property="plugInterval" jdbcType="INTEGER" />
    <result column="plug_in_time" property="plugInTime" jdbcType="TIMESTAMP" />
    <result column="plug_out_time" property="plugOutTime" jdbcType="TIMESTAMP" />
    <result column="check_in_time" property="checkInTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="BIGINT" />
    <result column="room_type" property="roomType" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="room_num" property="roomNum" jdbcType="VARCHAR" />
    <result column="floor" property="floor" jdbcType="INTEGER" />
  </resultMap>
  <!-- 条件查询 -->
  <select id="selectByCondition" resultMap="TotalResultMap">
    select summary.room_id,min(summary.check_in_time) as check_in_time
    ,min(summary.plug_in_time) as plug_in_time
    ,max(summary.plug_out_time) as plug_out_time,max(summary.last_room_status) as last_room_status
    ,count(summary.check_in_time) as plug_number
    ,max(room.room_type) as room_type,max(room.unit) as unit,
    max(room.floor) as floor,max(room.room_num) room_num 
    from hmp_check_in_summary summary left join hmp_hotel_room room on 
    summary.room_id = room.id where 1=1
    <if test="roomType != null">
        and room.room_type = #{roomType}
    </if>
    <if test="hotelId > 0">
        and summary.hotel_id = #{hotelId} 
    </if>
    <if test="plugInterval > 0">
        and summary.plug_interval >= #{plugInterval}
    </if>
    <if test=" lastDay != null">
         and  (TO_DAYS(NOW()) - TO_DAYS(summary.check_in_time)) > (${lastDay}-1)*${gapInc} 
         and  (TO_DAYS(NOW()) - TO_DAYS(summary.check_in_time)) &lt;= ${lastDay}*${gapInc} 
     </if>
     group by summary.room_id,summary.check_in_time
  </select>
  
  <resultMap type="cn.pl.hmp.server.dao.entity.CheckInDetailCount" id="DetailCountMap">
    <result column="room_type" property="roomType" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
  </resultMap>
  
  <select id="selectCount" resultMap="DetailCountMap">
        
    select room.room_type ,count(distinct(ditinctSummary.room_id)) count from (select summary.room_id as room_id from hmp_check_in_summary summary 
    where summary.plug_interval >= #{plugInterval} 
     and  (TO_DAYS(NOW()) - TO_DAYS(summary.check_in_time)) > (${lastDay}-1)*${gapInc} 
     and  (TO_DAYS(NOW()) - TO_DAYS(summary.check_in_time)) &lt;= ${lastDay}*${gapInc} 
    ) ditinctSummary
  left join hmp_hotel_room room on ditinctSummary.room_id = room.id
   where room.hotel_id = #{hotelId} 
   group by room.room_type
  </select>
  <select id="selectTotalCount" resultType="java.lang.Integer">
   select count(distinct(room_id)) from hmp_check_in_summary summary 
	where 1=1 and summary.hotel_id = #{hotelId}  
	 and summary.plug_interval >= #{plugInterval} 
	 and  (TO_DAYS(NOW()) - TO_DAYS(summary.check_in_time)) > (${lastDay}-1)*${gapInc} 
     and  (TO_DAYS(NOW()) - TO_DAYS(summary.check_in_time)) &lt;= ${lastDay}*${gapInc} 
   
  </select>
  
  <select id="selectEarliestInList" resultMap="BaseResultMap">
   select room_id, min(plug_in_time) as plug_in_time,check_in_time from hmp_check_in_summary
     where plug_in_time >= '${beginTime}' 
      group by room_id,check_in_time
  </select>
</mapper>