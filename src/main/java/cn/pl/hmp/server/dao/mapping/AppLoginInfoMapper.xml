<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.pl.hmp.server.dao.mapper.AppLoginInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.pl.hmp.server.dao.entity.AppLoginInfo" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="sys_id" property="sysId" jdbcType="BIGINT" />
    <result column="org_id" property="orgId" jdbcType="BIGINT" />
    <result column="hotel_id" property="hotelId" jdbcType="BIGINT" />
    <result column="app_user_id" property="appUserId" jdbcType="BIGINT" />
    <result column="room_num" property="roomNum" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="BIGINT" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sys_id, org_id, hotel_id, app_user_id, room_num, create_time, creator, login_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.pl.hmp.server.dao.entity.AppLoginInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from hmp_app_login_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from hmp_app_login_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from hmp_app_login_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.pl.hmp.server.dao.entity.AppLoginInfo" >
    insert into hmp_app_login_info (id, sys_id, org_id, 
      hotel_id, app_user_id, room_num, 
      create_time, creator, login_time
      )
    values (#{id,jdbcType=VARCHAR}, #{sysId,jdbcType=BIGINT}, #{orgId,jdbcType=BIGINT}, 
      #{hotelId,jdbcType=BIGINT}, #{appUserId,jdbcType=BIGINT}, #{roomNum,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=BIGINT}, #{loginTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.pl.hmp.server.dao.entity.AppLoginInfo" >
    insert into hmp_app_login_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sysId != null" >
        sys_id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="hotelId != null" >
        hotel_id,
      </if>
      <if test="appUserId != null" >
        app_user_id,
      </if>
      <if test="roomNum != null" >
        room_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="sysId != null" >
        #{sysId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="hotelId != null" >
        #{hotelId,jdbcType=BIGINT},
      </if>
      <if test="appUserId != null" >
        #{appUserId,jdbcType=BIGINT},
      </if>
      <if test="roomNum != null" >
        #{roomNum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.pl.hmp.server.dao.entity.AppLoginInfo" >
    update hmp_app_login_info
    <set >
      <if test="sysId != null" >
        sys_id = #{sysId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="hotelId != null" >
        hotel_id = #{hotelId,jdbcType=BIGINT},
      </if>
      <if test="appUserId != null" >
        app_user_id = #{appUserId,jdbcType=BIGINT},
      </if>
      <if test="roomNum != null" >
        room_num = #{roomNum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.pl.hmp.server.dao.entity.AppLoginInfo" >
    update hmp_app_login_info
    set sys_id = #{sysId,jdbcType=BIGINT},
      org_id = #{orgId,jdbcType=BIGINT},
      hotel_id = #{hotelId,jdbcType=BIGINT},
      app_user_id = #{appUserId,jdbcType=BIGINT},
      room_num = #{roomNum,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=BIGINT},
      login_time = #{loginTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 自定义方法 -->
  <!-- 查询列表 -->
  <select id="queryPages" resultMap="BaseResultMap" parameterType="cn.pl.hmp.server.dao.entity.AppLoginInfo">
  	select
		a.*, 
		b.NAME AS user_name,
		c.NAME,
		c.sub_name
	from
		hmp_app_login_info a
	  left join hmp_app_user b ON b.id = a.app_user_id
	  left join hmp_hotel_info c ON c.id = a.hotel_id
  	where 1=1 
  	  <if test="searchKey != null and searchKey != ''" >
  		and (user_name like #{searchKey,jdbcType=VARCHAR} or c.sub_name like #{searchKey,jdbcType=VARCHAR})
  	  </if>
  	  <if test="hotelId != null and hotelId != ''">
  	  	and a.hotel_id = #{hotelId,jdbcType=BIGINT}
  	  </if>
  </select>
  
  
</mapper>