<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.pl.hmp.server.dao.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.pl.hmp.server.dao.entity.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sys_id" property="sysId" jdbcType="BIGINT" />
    <result column="org_id" property="orgId" jdbcType="BIGINT" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="pwd_salt" property="pwdSalt" jdbcType="VARCHAR" />
    <result column="server_id" property="serverId" jdbcType="VARCHAR" />
    <result column="hotel_name" property="hotelName" jdbcType="VARCHAR" />
    <result column="tv_lock_time" property="tvLockTime" jdbcType="TIMESTAMP" />
    <result column="tv_lock_percent" property="tvLockPercent" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="BIGINT" />
    <result column="available" property="available" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sys_id, org_id, real_name, user_name, user_type, password, pwd_salt, server_id, 
    hotel_name, tv_lock_time, tv_lock_percent, create_time, creator, modify_time, modifier, 
    available
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.pl.hmp.server.dao.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from hmp_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from hmp_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from hmp_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.pl.hmp.server.dao.entity.User" keyProperty="id" useGeneratedKeys="true">
    insert into hmp_user (id, sys_id, org_id, 
      real_name, user_name, user_type, 
      password, pwd_salt, server_id, 
      hotel_name, tv_lock_time, tv_lock_percent, 
      create_time, creator, modify_time, 
      modifier, available)
    values (#{id,jdbcType=BIGINT}, #{sysId,jdbcType=BIGINT}, #{orgId,jdbcType=BIGINT}, 
      #{realName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{pwdSalt,jdbcType=VARCHAR}, #{serverId,jdbcType=VARCHAR}, 
      #{hotelName,jdbcType=VARCHAR}, #{tvLockTime,jdbcType=TIMESTAMP}, #{tvLockPercent,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=BIGINT}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{modifier,jdbcType=BIGINT}, #{available,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="cn.pl.hmp.server.dao.entity.User" keyProperty="id" useGeneratedKeys="true">
    insert into hmp_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sysId != null" >
        sys_id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="pwdSalt != null" >
        pwd_salt,
      </if>
      <if test="serverId != null" >
        server_id,
      </if>
      <if test="hotelName != null" >
        hotel_name,
      </if>
      <if test="tvLockTime != null" >
        tv_lock_time,
      </if>
      <if test="tvLockPercent != null" >
        tv_lock_percent,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
      <if test="available != null" >
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sysId != null" >
        #{sysId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="pwdSalt != null" >
        #{pwdSalt,jdbcType=VARCHAR},
      </if>
      <if test="serverId != null" >
        #{serverId,jdbcType=VARCHAR},
      </if>
      <if test="hotelName != null" >
        #{hotelName,jdbcType=VARCHAR},
      </if>
      <if test="tvLockTime != null" >
        #{tvLockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tvLockPercent != null" >
        #{tvLockPercent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=BIGINT},
      </if>
      <if test="available != null" >
        #{available,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.pl.hmp.server.dao.entity.User" >
    update hmp_user
    <set >
      <if test="sysId != null" >
        sys_id = #{sysId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="pwdSalt != null" >
        pwd_salt = #{pwdSalt,jdbcType=VARCHAR},
      </if>
      <if test="serverId != null" >
        server_id = #{serverId,jdbcType=VARCHAR},
      </if>
      <if test="hotelName != null" >
        hotel_name = #{hotelName,jdbcType=VARCHAR},
      </if>
      <if test="tvLockTime != null" >
        tv_lock_time = #{tvLockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tvLockPercent != null" >
        tv_lock_percent = #{tvLockPercent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=BIGINT},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.pl.hmp.server.dao.entity.User" >
    update hmp_user
    set sys_id = #{sysId,jdbcType=BIGINT},
      org_id = #{orgId,jdbcType=BIGINT},
      real_name = #{realName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      pwd_salt = #{pwdSalt,jdbcType=VARCHAR},
      server_id = #{serverId,jdbcType=VARCHAR},
      hotel_name = #{hotelName,jdbcType=VARCHAR},
      tv_lock_time = #{tvLockTime,jdbcType=TIMESTAMP},
      tv_lock_percent = #{tvLockPercent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=BIGINT},
      available = #{available,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 自定义 -->
  <!-- 批量删除 -->
  <delete id="deleteOnBatch">
        delete from hmp_user
    where id in 
      <foreach collection="list" item="ids" index="index"
            open="(" close=")" separator=",">
            #{ids}
      </foreach>
  </delete>
</mapper>