<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.pl.hmp.server.dao.mapper.HmpHotelToolPacksMapper" >
  <resultMap id="BaseResultMap" type="cn.pl.hmp.server.dao.entity.HmpHotelToolPacks" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sys_id" property="sysId" jdbcType="BIGINT" />
    <result column="org_id" property="orgId" jdbcType="BIGINT" />
    <result column="hotel_id" property="hotelId" jdbcType="BIGINT" />
    <result column="pkg_type" property="pkgType" jdbcType="VARCHAR" />
    <result column="cur_version" property="curVersion" jdbcType="VARCHAR" />
    <result column="online" property="online" jdbcType="BIT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sys_id, org_id, hotel_id, pkg_type, cur_version, online, create_date, modify_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.pl.hmp.server.dao.entity.HmpHotelToolPacksExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from hmp_hotel_tool_packs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from hmp_hotel_tool_packs
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from hmp_hotel_tool_packs
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.pl.hmp.server.dao.entity.HmpHotelToolPacks" keyProperty="id" useGeneratedKeys="true">
    insert into hmp_hotel_tool_packs (id, sys_id, org_id, 
      hotel_id, pkg_type, cur_version, 
      online, create_date, modify_time
      )
    values (#{id,jdbcType=BIGINT}, #{sysId,jdbcType=BIGINT}, #{orgId,jdbcType=BIGINT}, 
      #{hotelId,jdbcType=BIGINT}, #{pkgType,jdbcType=VARCHAR}, #{curVersion,jdbcType=VARCHAR}, 
      #{online,jdbcType=BIT}, #{createDate,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.pl.hmp.server.dao.entity.HmpHotelToolPacks" keyProperty="id" useGeneratedKeys="true">
    insert into hmp_hotel_tool_packs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sysId != null" >
        sys_id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="hotelId != null" >
        hotel_id,
      </if>
      <if test="pkgType != null" >
        pkg_type,
      </if>
      <if test="curVersion != null" >
        cur_version,
      </if>
      <if test="online != null" >
        online,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sysId != null" >
        #{sysId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="hotelId != null" >
        #{hotelId,jdbcType=BIGINT},
      </if>
      <if test="pkgType != null" >
        #{pkgType,jdbcType=VARCHAR},
      </if>
      <if test="curVersion != null" >
        #{curVersion,jdbcType=VARCHAR},
      </if>
      <if test="online != null" >
        #{online,jdbcType=BIT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.pl.hmp.server.dao.entity.HmpHotelToolPacksExample" resultType="java.lang.Integer" >
    select count(*) from hmp_hotel_tool_packs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="cn.pl.hmp.server.dao.entity.HmpHotelToolPacks" >
    update hmp_hotel_tool_packs
    <set >
      <if test="sysId != null" >
        sys_id = #{sysId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="hotelId != null" >
        hotel_id = #{hotelId,jdbcType=BIGINT},
      </if>
      <if test="pkgType != null" >
        pkg_type = #{pkgType,jdbcType=VARCHAR},
      </if>
      <if test="curVersion != null" >
        cur_version = #{curVersion,jdbcType=VARCHAR},
      </if>
      <if test="online != null" >
        online = #{online,jdbcType=BIT},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.pl.hmp.server.dao.entity.HmpHotelToolPacks" >
    update hmp_hotel_tool_packs
    set sys_id = #{sysId,jdbcType=BIGINT},
      org_id = #{orgId,jdbcType=BIGINT},
      hotel_id = #{hotelId,jdbcType=BIGINT},
      pkg_type = #{pkgType,jdbcType=VARCHAR},
      cur_version = #{curVersion,jdbcType=VARCHAR},
      online = #{online,jdbcType=BIT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <resultMap id="PackResultMap" type="cn.pl.hmp.server.dao.entity.HmpHotelToolPacks" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sys_id" property="sysId" jdbcType="BIGINT" />
    <result column="org_id" property="orgId" jdbcType="BIGINT" />
    <result column="hotel_id" property="hotelId" jdbcType="BIGINT" />
    <result column="hotel_name" property="hotelName" jdbcType="VARCHAR" />
    <result column="sub_name" property="subName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="pkg_type" property="pkgType" jdbcType="VARCHAR" />
    <result column="cur_version" property="curVersion" jdbcType="VARCHAR" />
    <result column="online" property="online" jdbcType="BIT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <!-- 自定义方法 -->
  <!-- 查询列表 -->
  <select id="queryList" resultMap="PackResultMap" parameterType="cn.pl.hmp.server.dao.entity.HmpHotelToolPacks">
  	SELECT
		a.id,
		a.sys_id,
		a.org_id,
		a.pkg_type,
		a.cur_version,
		a.online,
		a.create_date,
		a.modify_time,
		b.name AS hotel_name,
		b.sub_name,
		b.type,
		b.address,
		b.id hotel_id
	FROM
		hmp_hotel_info b
	LEFT JOIN hmp_hotel_tool_packs a ON a.hotel_id = b.id
  	  where 1=1 
  	  <if test="subName != null and subName != ''" >
  		and (b.sub_name like #{subName,jdbcType=VARCHAR} or b.address like #{subName,jdbcType=VARCHAR})
  	  </if>
  	  <if test="pkgType != null and pkgType != ''">
  	  	and a.pkg_type = #{pkgType,jdbcType=VARCHAR}
  	  </if>
  	  <if test="hotelName != null and hotelName != ''">
  	  	and b.name = #{hotelName,jdbcType=VARCHAR}
  	  </if>
  	  <if test="isOnline != null and isOnline != ''">
  	  	and a.online = #{online,jdbcType=BIT}
  	  </if>
  	order by a.create_date desc
  </select>
  <delete id="deleteByHotelId">
    delete from hmp_hotel_tool_packs where hotel_id = #{hotelId}
  </delete>
</mapper>